## Configure the ingress resource that allows you to access the
## app installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## When the ingress is enabled, a host pointing to this will be created
  ##
  hostname: keycloak.denhaag.nl

  ## Specify a tls secret which already exists. tls must be set to true
  ##
  existingTlsSecret: zgw4-tls-secret

  ingressClassName: nginx
  
  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ##
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

##
## Autoscaling configuration
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  # targetCPU: 50
  # targetMemory: 50

##
## An array to add env vars
##
env:
  - name: KC_HOSTNAME
    value: keycloak.denhaag.nl
  - name: KC_LOG_LEVEL
    value: INFO
    #,org.keycloak.services:DEBUG,org.keycloak.services.scheduled:INFO,org.keycloak.authentication:DEBUG,org.apache.http:DEBUG,org.keycloak.broker:DEBUG

##
## Sync objects from Azure keyvault to kubernetes as secrets
##
syncAKV:
  sync-1:
    vaultname: kv-zgw-p-weu-01
    objectname: keycloak-prod-keycloak-admin
    objecttype: secret
    output:
      secret:
        name: '{{ include "app.fullname" . }}'
        dataKey: KEYCLOAK_ADMIN
  sync-2:
    vaultname: kv-zgw-p-weu-01
    objectname: keycloak-prod-keycloak-admin-password
    objecttype: secret
    output:
      secret:
        name: '{{ include "app.fullname" . }}'
        dataKey: KEYCLOAK_ADMIN_PASSWORD
  sync-3:
    vaultname: kv-zgw-p-weu-01
    objectname: keycloak-prod-kc-db-url
    objecttype: secret
    output:
      secret:
        name: '{{ include "app.fullname" . }}'
        dataKey: KC_DB_URL
  sync-4:
    vaultname: kv-zgw-p-weu-01
    objectname: keycloak-prod-kc-db-username
    objecttype: secret
    output:
      secret:
        name: '{{ include "app.fullname" . }}'
        dataKey: KC_DB_USERNAME
  sync-5:
    vaultname: kv-zgw-p-weu-01
    objectname: keycloak-prod-kc-db-password
    objecttype: secret
    output:
      secret:
        name: '{{ include "app.fullname" . }}'
        dataKey: KC_DB_PASSWORD

extraObjects:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: '{{ include "common.names.fullname" . }}-ag'
    annotations:
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
      # appgw.ingress.kubernetes.io/health-probe-status-codes: "404"
      appgw.ingress.kubernetes.io/health-probe-path: "/health"
      appgw.ingress.kubernetes.io/rewrite-rule-set: zgw-rewriteset1
  spec:
    ingressClassName: azure-application-gateway
    tls:
    - hosts:
      - '{{ .Values.ingress.hostname }}'
      secretName: zgw3-tls-secret
    rules:
    - host: '{{ .Values.ingress.hostname }}'
      http:
        paths:
        - path: /js/
          pathType: Prefix
          backend:
            service:
              name: '{{ include "common.names.fullname" . }}'
              port:
                number: 8080
        - path: /realms/
          pathType: Prefix
          backend:
            service:
              name: '{{ include "common.names.fullname" . }}'
              port:
                number: 8080
        - path: /resources/
          pathType: Prefix
          backend:
            service:
              name: '{{ include "common.names.fullname" . }}'
              port:
                number: 8080
        - path: /robots.txt
          pathType: Prefix
          backend:
            service:
              name: '{{ include "common.names.fullname" . }}'
              port:
                number: 8080