{
  "id": "zgw-publiek",
  "realm": "zgw-publiek",
  "notBefore": 1637312216,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": true,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 300,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 10,
  "roles": {
    "realm": [
      {
        "id": "8cab5305-4c79-4622-b308-6a31ba3b81a6",
        "name": "default-roles-zgw-publiek",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "zgw-publiek",
        "attributes": {}
      },
      {
        "id": "f4d8a09f-766a-4081-98a5-23ce2967e186",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "zgw-publiek",
        "attributes": {}
      },
      {
        "id": "1ce706dc-ad9a-4c37-a773-a9032fb31db5",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "zgw-publiek",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "28b4d5a4-9499-4c6b-92e2-07d666cccc23",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "bc1ec63e-1a40-444d-ba52-95a137e7ee31",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "manage-realm",
                "query-users",
                "impersonation",
                "view-users",
                "manage-authorization",
                "manage-users",
                "query-clients",
                "create-client",
                "view-authorization",
                "manage-identity-providers",
                "view-clients",
                "view-identity-providers",
                "view-events",
                "manage-events",
                "manage-clients",
                "query-realms",
                "view-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "94b46624-e37d-4109-96f6-0fd9e4d368db",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "9bc8c1d3-5497-4f79-afed-0ddff858ee1b",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "78152035-01ea-4d75-b00e-d2ac60d3f048",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "fa7c66e4-5dae-4a01-a3c2-7331b53f462e",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "ffbf65e0-faff-4247-95f5-18f5f76b81af",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "0e52c4b7-431b-4cfc-916b-bf605ee007ba",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "91256453-0130-46d1-b69c-902c5c049c28",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "2fcc90b8-d451-48d0-bc4b-ed29c3a4b7d6",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "deb4f631-9ebb-4e92-8656-edae699635e7",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "85c85ccc-57f7-426a-a499-ca2999860db3",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "d940796a-9f95-4d6c-8db3-b679dec7636a",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "61122bab-53ad-4a3e-be6f-574383bb3c40",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "3ca1efe2-8d07-4f03-8f8a-ecb6985158b3",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "46ba9969-50ea-4979-bb20-3c945f913506",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "4076a183-95d8-40ec-a088-c9b3b6568eaa",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "f340d1d6-3ba3-40ee-a9f5-ff90cc4edf32",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "05dcdeea-75ba-4df1-956e-7a76101509c6",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        },
        {
          "id": "1c552786-ca7c-421b-b901-2d8c79f7ca70",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "5bfc6873-f955-46e4-bbed-c003319ea23b",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "account-console": [],
      "openforms-eherkenning": [],
      "xc": [],
      "broker": [
        {
          "id": "2df7ec86-f03c-448d-9309-2d4f782af67a",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "fc0463d8-5be1-417c-8fea-4959ba8d19ac",
          "attributes": {}
        }
      ],
      "openforms-digidmachtigen": [],
      "klantportaal2": [],
      "admin-cli": [],
      "haalcentraal": [],
      "klantportaal": [],
      "account": [
        {
          "id": "f3492947-2c97-4b1e-ace0-63c5f519d33a",
          "name": "view-profile",
          "composite": false,
          "clientRole": true,
          "containerId": "429521b1-2e07-4d49-a60b-05a519827bb6",
          "attributes": {}
        },
        {
          "id": "6f4d03d1-0f9e-4cda-af65-ed2c9dc64cdb",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "429521b1-2e07-4d49-a60b-05a519827bb6",
          "attributes": {}
        },
        {
          "id": "4319d8a1-4d4c-49f9-9f33-dbbae08496ce",
          "name": "manage-account",
          "composite": false,
          "clientRole": true,
          "containerId": "429521b1-2e07-4d49-a60b-05a519827bb6",
          "attributes": {}
        }
      ],
      "openforms-digid": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "8cab5305-4c79-4622-b308-6a31ba3b81a6",
    "name": "default-roles-zgw-publiek",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "zgw-publiek"
  },
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "length(12) and upperCase(1) and lowerCase(1) and digits(1) and notUsername(undefined)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "a62c2750-002c-401b-a6ee-0dbcc6d81120",
      "createdTimestamp": 1680517464052,
      "username": "service-account-realm-management",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "realm-management",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-zgw-publiek"
      ],
      "clientRoles": {
        "realm-management": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "429521b1-2e07-4d49-a60b-05a519827bb6",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/zgw-publiek/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/zgw-publiek/account/*"
      ],
      "webOrigins": [
        "https://klantportaal-zgw.test.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0cea889-d2e2-4783-b63a-b1e0ab9ce3f9",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/zgw-publiek/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/zgw-publiek/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f985b138-780e-4d7d-92df-3a567fee1f20",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ca363615-23ae-4083-bf39-23345dde9d20",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fc0463d8-5be1-417c-8fea-4959ba8d19ac",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "32771624-1b77-4307-9241-fc3755d32b6b",
      "clientId": "haalcentraal",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1be19c80-0eec-48bb-9c07-08aae2cf40e3",
      "clientId": "klantportaal",
      "rootUrl": "https://klantportaal-zgw.test.denhaag.nl",
      "adminUrl": "https://klantportaal-zgw.test.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://klantportaal-zgw.test.denhaag.nl/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "900",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "client.session.max.lifespan": "900",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloakdhzgwpubliek",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "a50292b9-75b1-43b0-83a8-4dd26c9dfbb5",
          "name": "Acting subject BSN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "actingSubjectBsn",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "aanvrager.bsn",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "b9fd70b0-8146-47de-80bf-5261d4bb9fd5",
          "name": "Authentication level from session",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "authenticationLevel",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "niveau",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "661b66a8-3cba-4197-81b6-a4155ef8ae38",
          "name": "Idp origin from session",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "loginOrigin",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middel",
            "access.tokenResponse.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "eHerkenning",
        "profile",
        "roles",
        "machtigen",
        "bewindvoering",
        "email",
        "digid"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "baf6f73c-6eac-4051-80a3-cabbfb127002",
      "clientId": "klantportaal2",
      "rootUrl": "https://klantportaal2-zgw.test.denhaag.nl",
      "adminUrl": "https://klantportaal2-zgw.test.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://klantportaal2-zgw.test.denhaag.nl/*"
      ],
      "webOrigins": [
        "https://klantportaal2-zgw.test.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8fcf52ba-3fe8-4c17-ab0c-401c0a3bf429",
      "clientId": "openforms-digid",
      "rootUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "adminUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://127.0.0.1:8000/*",
        "https://openformulieren-zgw.test.denhaag.nl/*"
      ],
      "webOrigins": [
        "https://openformulieren-zgw.test.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "token.endpoint.auth.signing.alg": "RS256",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "5f6ec1c7-eb05-46d3-8ed5-f761d73d934d",
          "name": "KVK attribute to claim mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "kvk",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "kvk",
            "jsonType.label": "String"
          }
        },
        {
          "id": "46757928-67c9-429a-a8b8-3033b50b3205",
          "name": "BSN attribute to claim mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bsn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bsn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email",
        "digid"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e403289e-8585-4dc1-bde5-ab306c20af5b",
      "clientId": "openforms-digidmachtigen",
      "rootUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "adminUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://127.0.0.1:8000/*",
        "https://openformulieren-zgw.test.denhaag.nl/*"
      ],
      "webOrigins": [
        "https://openformulieren-zgw.test.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "machtigen",
        "email",
        "digid"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3499bc9-e163-4f76-9889-49afc7f18be8",
      "clientId": "openforms-eherkenning",
      "rootUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "adminUrl": "https://openformulieren-zgw.test.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://127.0.0.1:8000/*",
        "https://openformulieren-zgw.test.denhaag.nl/*"
      ],
      "webOrigins": [
        "https://openformulieren-zgw.test.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8943a8b7-f544-4cf9-a69f-ecd9872dae53",
          "name": "KVK attribute to claim mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "kvk",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "kvk",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5bfc6873-f955-46e4-bbed-c003319ea23b",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "91e2d283-0834-4c0b-ad70-1589886e1a80",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7de0a7ad-a0a4-402f-863a-92fecaeb22da",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "faf192be-71c2-45d8-9d1b-01eed5f71af5",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": false,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "client.resource.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "Client",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "08d3973c-995d-42a2-98b1-f59a1351d43f",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "map-roles-client-scope"
              },
              {
                "name": "configure"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "manage"
              },
              {
                "name": "token-exchange"
              },
              {
                "name": "map-roles-composite"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "f5f30c1b-9d2c-4b66-b519-60acc1456a11",
            "name": "Allow klantportaal client",
            "description": "Postive match on client name 'klantportaal'",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"klantportaal\"]"
            }
          },
          {
            "id": "46dcbee3-04ff-418c-9d68-8cd1d7821671",
            "name": "manage.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"manage\"]"
            }
          },
          {
            "id": "0df394b6-2eeb-4e62-9ba7-4abbc9469d96",
            "name": "configure.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"configure\"]"
            }
          },
          {
            "id": "e6e56d78-833e-4ef6-a8b5-7a3f38ecabcf",
            "name": "view.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"view\"]"
            }
          },
          {
            "id": "1754b2b8-74fb-4878-85c5-dc874625534a",
            "name": "map-roles.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"map-roles\"]"
            }
          },
          {
            "id": "37ff12c3-3ea1-47b1-9c74-9fb7139c5e03",
            "name": "map-roles-client-scope.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"map-roles-client-scope\"]"
            }
          },
          {
            "id": "8fd0ba4c-a55d-4145-abc8-d48ea4324bc8",
            "name": "map-roles-composite.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"map-roles-composite\"]"
            }
          },
          {
            "id": "76527537-8e79-48a3-a5d2-7d340566e463",
            "name": "token-exchange.permission.client.32771624-1b77-4307-9241-fc3755d32b6b",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.32771624-1b77-4307-9241-fc3755d32b6b\"]",
              "scopes": "[\"token-exchange\"]",
              "applyPolicies": "[\"Allow klantportaal client\"]"
            }
          }
        ],
        "scopes": [
          {
            "id": "46fdecbd-7bff-4e53-8265-564cff212a17",
            "name": "manage"
          },
          {
            "id": "35cd050a-da7d-4f6a-8549-bfed9ee08321",
            "name": "view"
          },
          {
            "id": "9f07776b-b6ec-4482-a042-8071037b71ce",
            "name": "map-roles"
          },
          {
            "id": "a13c6995-033c-4762-ba64-f89be3cb5ae6",
            "name": "map-roles-client-scope"
          },
          {
            "id": "c91ca199-3924-4e6b-a872-0e5c412026aa",
            "name": "map-roles-composite"
          },
          {
            "id": "c3c688a9-92d3-43d4-bea4-1255d106b1bf",
            "name": "configure"
          },
          {
            "id": "7dab3bfd-219a-49d0-b80c-f337c6f43ba5",
            "name": "token-exchange"
          }
        ],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "2c6ad134-6f28-4cbe-9f8f-4aa4145e2640",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/zgw-publiek/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/zgw-publiek/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "07dc2789-0f77-4dd9-9c10-5eb69cd82da8",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "091e8e78-5d2a-4827-8196-43066068b534",
      "clientId": "xc",
      "rootUrl": "https://mijn-o.ot.denhaag.nl",
      "adminUrl": "https://mijn-o.ot.denhaag.nl",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:8080/*",
        "https://localhost:8443/",
        "http://localhost:8080",
        "http://mijn-o.ot.denhaag.nl/*",
        "http://mijn-o.ot.denhaag.nl:8080/*",
        "https://mijn-o.ot.denhaag.nl/*",
        "https://localhost:8443/*"
      ],
      "webOrigins": [
        "https://mijn-o.ot.denhaag.nl"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ef3ed4f0-8ac4-4a18-813c-78ca2423bb4b",
          "name": "BSN attribute to claim mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bsn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bsn",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "69c18573-3a3b-4a11-b90e-e73633dfdca8",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "62659250-de38-4a03-ad4f-dda04f5d431f",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "db76c7b9-943c-4f05-9fcc-fb6d4bde0198",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "76c6f3fa-4dbb-403f-ae74-5188a629c138",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "72ebc772-bfc5-468b-a7bc-819b4e6b683a",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "c706701e-792e-420f-adf6-685f4347d0b5",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "f5fa5092-23ce-41e4-84d3-2a318255c7eb",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "c25e6de4-d2d8-4501-a8a1-e53782a8d949",
      "name": "machtigen",
      "description": "Default scope for DigiD Machtigen authentication",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6fefde98-c23e-4b87-8092-85629575e0f5",
          "name": "Add legal subject BSN from user session",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "actingSubjectBsn",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gemachtigde.bsn",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "389dcdd9-6a54-4bb0-b475-f340476daf42",
          "name": "Add service UUID from session",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "serviceUUID",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "serviceUUID",
            "access.tokenResponse.claim": "false"
          }
        }
      ]
    },
    {
      "id": "111105c8-d97f-4c59-93db-bf7f36156abe",
      "name": "digid",
      "description": "Default scope for DigiD authentication",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "75527fad-912c-4aeb-8586-38d4bd06ffe9",
          "name": "Add BSN from session",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "legalSubjectBsn",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "aanvrager.bsn",
            "access.tokenResponse.claim": "false"
          }
        }
      ]
    },
    {
      "id": "6857c0f8-09b6-405b-8e29-142dd237914c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9e450227-2e2c-4790-8ff8-d96c8f2fc2d3",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "a6e7c565-a3eb-4e8e-9f86-16c295c5fec4",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d22d13db-b1aa-4c98-a112-d31381ddf7a0",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cc7914ee-d43b-45a9-8ce9-4ef066d3996c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f6b4f13-a3bd-4427-9199-06280a26a390",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "467d53fe-dfa6-4db1-8852-019c52e0ebf5",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5a0f6831-cb85-4daa-929c-07208215178b",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d5cdc685-add8-49a4-a0ff-9f900d0f9594",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d47bc36-b67e-41c1-b01a-6ba622d73868",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "94057e8f-da58-440c-a32a-4023789710ad",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d25d05b1-f820-4351-bdcb-261c30e97d2a",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "96ebdaf7-34d9-43d2-946e-d73681e262d2",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cc9feee4-1021-48a5-a87c-1e7ca179204f",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bdfac027-6234-4b4e-a4db-d337f5795f12",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b42482a7-d4e2-41e4-9f35-3de71c78333e",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c5ce8c3f-9dda-41aa-80a4-5f9ff41bef14",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2b3744dc-8e01-4f6f-bf63-2fc3087eef0e",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "4d080904-a8c6-4232-a877-5b10b74a8f62",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e8485f07-296e-4a99-8bd4-950d1b1eed41",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "965bc901-65e8-426d-bf30-0f9c84c1a3d5",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9fbadea7-ab1f-4c43-bd6d-50cd6c3257ae",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "dbdcede8-aa5d-49d2-ba13-b17f8d0598d4",
      "name": "bewindvoering",
      "description": "Client claims mapper for Bewindvoering",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "f609bbe5-f910-46b9-8a53-cabc8e9557a8",
          "name": "Legal subject BSN",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "legalSubjectBsn",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "aanvrager.bsn",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "c8ec59be-b766-40f7-89dd-fca291b625c5",
          "name": "Bewindvoering result code",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "bwvResultCode",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "code",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "98af6446-332c-4e83-9bd7-38daafa80747",
          "name": "Acting subject KVK",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "actingSubjectKvk",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gemachtigde.kvk",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "a440fa27-87d6-40f3-8ea3-85c6369449de",
          "name": "Service UUID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "serviceUUID",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "serviceUUID",
            "access.tokenResponse.claim": "false"
          }
        }
      ]
    },
    {
      "id": "782055e5-9d6d-49ab-b428-78eb775333ab",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0f8398de-63f6-461e-957f-f061d01b5dbd",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "fd37d2e1-28fd-4e99-88e6-ad0f995a7eba",
      "name": "eHerkenning",
      "description": "Claim mapper(s) for eHerkenning",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6d4ce09d-4a2b-4831-a73e-6423475dd88f",
          "name": "Acting subject KVK",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "legalSubjectKvk",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "aanvrager.kvk",
            "access.tokenResponse.claim": "false"
          }
        }
      ]
    },
    {
      "id": "bacf46c0-7692-4d79-8b0e-14b10fe430cc",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e34c2c09-b5dc-4978-bcbc-11103586c857",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "e5ad7359-939d-448a-8c93-b07b8c43c572",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "17c44fe1-eac9-4b54-8ac4-adc6e167ba11",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "email",
    "role_list",
    "roles",
    "web-origins",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "phone",
    "address",
    "offline_access"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "denhaagtheme",
  "eventsEnabled": true,
  "eventsExpiration": 3600,
  "eventsListeners": [
    "jboss-logging",
    "email"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "UPDATE_TOTP",
    "PERMISSION_TOKEN_ERROR",
    "IDENTITY_PROVIDER_RETRIEVE_TOKEN_ERROR",
    "IMPERSONATE_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESTART_AUTHENTICATION",
    "CLIENT_INFO",
    "IMPERSONATE",
    "LOGIN",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "INTROSPECT_TOKEN_ERROR",
    "DELETE_ACCOUNT",
    "UPDATE_PASSWORD",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "UNREGISTER_NODE",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "USER_INFO_REQUEST_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "IDENTITY_PROVIDER_RESPONSE",
    "EXECUTE_ACTIONS_ERROR",
    "IDENTITY_PROVIDER_RETRIEVE_TOKEN",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "UNREGISTER_NODE_ERROR",
    "VALIDATE_ACCESS_TOKEN_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REVOKE_GRANT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "UPDATE_PROFILE",
    "USER_INFO_REQUEST",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "CLIENT_UPDATE",
    "UPDATE_TOTP_ERROR",
    "GRANT_CONSENT_ERROR",
    "SEND_RESET_PASSWORD",
    "GRANT_CONSENT",
    "REGISTER_NODE_ERROR",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "UPDATE_PROFILE_ERROR",
    "VALIDATE_ACCESS_TOKEN",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "IDENTITY_PROVIDER_LOGIN",
    "AUTHREQID_TO_TOKEN",
    "LOGOUT",
    "CLIENT_INFO_ERROR",
    "CLIENT_REGISTER",
    "REFRESH_TOKEN",
    "INTROSPECT_TOKEN",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "CLIENT_DELETE_ERROR",
    "PERMISSION_TOKEN",
    "REGISTER_NODE",
    "INVALID_SIGNATURE",
    "OAUTH2_DEVICE_AUTH",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "INVALID_SIGNATURE_ERROR",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "IDENTITY_PROVIDER_RESPONSE_ERROR",
    "IDENTITY_PROVIDER_LOGIN_ERROR",
    "RESET_PASSWORD",
    "UPDATE_CONSENT",
    "SEND_RESET_PASSWORD_ERROR",
    "REFRESH_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "oidc-eHerkenning",
      "displayName": "eHerkenning",
      "internalId": "d5690677-47ff-44aa-accd-41f6d9ef11b7",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "eHerkenning - First Login",
      "config": {
        "validateSignature": "true",
        "acceptsPromptNoneForwardFromClient": "true",
        "clientId": "denhaag",
        "tokenUrl": "https://verify.idpconnect.nl/aselectserver/server/openidconnect_authorize",
        "jwksUrl": "https://verify.idpconnect.nl/aselectserver/server/openid-webkey",
        "issuer": "https://verify.idpconnect.nl",
        "useJwksUrl": "true",
        "authorizationUrl": "https://verify.idpconnect.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_basic",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "guiOrder": "2"
      }
    },
    {
      "alias": "oidc-digid",
      "displayName": "DigiD",
      "internalId": "e24ad316-8ba8-4516-98ab-cceccc355bf9",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "DigiD - First Login",
      "config": {
        "hideOnLoginPage": "false",
        "validateSignature": "true",
        "clientId": "Valtimo",
        "tokenUrl": "https://siam1.test.anoigo.nl/aselectserver/server/openidconnect_authorize",
        "jwksUrl": "https://siam1.test.anoigo.nl/aselectserver/server/openidconnect_webkey",
        "backchannelSupported": "false",
        "issuer": "https://siam1.test.anoigo.nl",
        "useJwksUrl": "true",
        "authorizationUrl": "https://siam1.test.anoigo.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_basic",
        "disableUserInfo": "true",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "guiOrder": "1"
      }
    },
    {
      "alias": "digid-stekkerdoos",
      "displayName": "DigiD Machtigen (Oud)",
      "internalId": "0d3df6dc-aed5-4c42-a27d-2f75354ee6a4",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "DigiD - First Login",
      "config": {
        "hideOnLoginPage": "true",
        "clientId": "formulieren3",
        "tokenUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "authorizationUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_post",
        "disableUserInfo": "true",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "3",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "eherkenning-stekkerdoos",
      "displayName": "eHerkenning Bewindvoering (Oud)",
      "internalId": "519e6ba6-4dab-42e6-abf8-069e7204f7ab",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "eHerkenning - First Login",
      "config": {
        "hideOnLoginPage": "true",
        "clientId": "formulieren4",
        "tokenUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "authorizationUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_post",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "4",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "digid-machtigen",
      "displayName": "DigiD Machtigen Test",
      "internalId": "d65f4846-28a5-472f-ab3c-a1bbc521304c",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "DigiD - First Login",
      "config": {
        "clientId": "formulieren3",
        "tokenUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "authorizationUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_post",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "5",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "eherkenning-bewindvoering",
      "displayName": "eHerkenning Bewindvoering Test",
      "internalId": "3570bcbf-ddac-49b7-9956-a4c8caf5b968",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "eHerkenning - First Login",
      "config": {
        "clientId": "formulieren4",
        "tokenUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "authorizationUrl": "https://secure.acc.denhaag.nl/aselectserver/server/openidconnect_authorize",
        "clientAuthMethod": "client_secret_post",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "6",
        "useJwksUrl": "true"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "dbf03ad4-7be8-4e5a-a54e-245cdb614d78",
      "name": "Import result code to session",
      "identityProviderAlias": "eherkenning-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "bwvResultCode",
        "claim.value": "soort"
      }
    },
    {
      "id": "728e1bfe-e90a-44a2-b120-c1c90f90027a",
      "name": "service-uuid",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claim": "urn:nl-eid-gdi:1\\.0:ServiceUUID",
        "user.attribute": "serviceUUID"
      }
    },
    {
      "id": "38bb7c04-f232-4adb-bee1-296d40180b8e",
      "name": "email",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "urn:etoegang:1\\.9:attribute:Email",
        "user.attribute": "email"
      }
    },
    {
      "id": "97a5f0f8-fbdd-4dc7-8e23-8aff4017a1f8",
      "name": "Set IDP origin session attribute",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "eherkenning",
        "syncMode": "INHERIT",
        "attribute": "loginOrigin"
      }
    },
    {
      "id": "170a00d0-8b5b-498b-8913-27ea4c476599",
      "name": "bsn mapper",
      "identityProviderAlias": "oidc-digid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "uid",
        "user.attribute": "bsn"
      }
    },
    {
      "id": "20a35fd3-6d9e-437e-bcf1-de13cde311a2",
      "name": "Import KVK representation to session",
      "identityProviderAlias": "eherkenning-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "actingSubjectKvk",
        "claim.value": "kvk-vertegenwoordiger"
      }
    },
    {
      "id": "1675e9be-e701-42e9-9ae3-4ea4dff5754f",
      "name": "emailaddress",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "user.attribute": "email",
        "attributes": "[]",
        "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"
      }
    },
    {
      "id": "e7eeee4c-d487-4f17-aed4-44a43dd0c210",
      "name": "Authentication level to session",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "sel_level",
        "claim.value": "authenticationLevel"
      }
    },
    {
      "id": "13acd0c8-8d6a-48db-872f-3e677561e656",
      "name": "Add IDP origin to User session",
      "identityProviderAlias": "digid-machtigen",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "machtigen",
        "syncMode": "INHERIT",
        "attribute": "loginOrigin"
      }
    },
    {
      "id": "110b8dc7-0fcd-4119-a6c2-b36c129b315b",
      "name": "Import BSN to session",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "legalSubjectBsn",
        "claim.value": "urn:nl-eid-gdi:1\\.0:LegalSubjectID"
      }
    },
    {
      "id": "5bdd5290-dc62-4244-83ac-d02da67ace0e",
      "name": "acting-subject-id",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "urn:nl-eid-gdi:1\\.0:ActingSubjectID",
        "user.attribute": "actingSubjectID"
      }
    },
    {
      "id": "c46edea0-3445-4503-b3fb-27044fb35619",
      "name": "Import BSN to session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "legalSubjectBsn",
        "claim.value": "bsn-betrokkene"
      }
    },
    {
      "id": "51ab76ad-c2a9-4638-8dfd-10c8c72076b7",
      "name": "Import authentication level to session",
      "identityProviderAlias": "eherkenning-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "niveau",
        "claim.value": "sel_level"
      }
    },
    {
      "id": "1cc26c3e-e69b-48f1-a80e-003b168bb4b1",
      "name": "Add legal subject BSN to user session",
      "identityProviderAlias": "oidc-digid",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "legalSubjectBsn",
        "claim.value": "uid"
      }
    },
    {
      "id": "79d6cd05-d983-4dd3-a874-7d985a7b5873",
      "name": "Import acting subject KVK to session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "actingSubjectKvk",
        "claim.value": "kvk-vertegenwoordiger"
      }
    },
    {
      "id": "12976477-a4e3-4614-bf9f-49a4137651bd",
      "name": "firstName",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claims": "[]",
        "syncMode": "INHERIT",
        "claim": "urn:etoegang:1\\.9:attribute:FirstName",
        "user.attribute": "firstName"
      }
    },
    {
      "id": "6bd7eaef-f69d-4d5d-a582-04c1d9ac758d",
      "name": "Add IDP origin to User session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "bewindvoering",
        "syncMode": "INHERIT",
        "attribute": "loginOrigin"
      }
    },
    {
      "id": "1a8e5f5b-34a4-4c36-aac9-d5f42b6046e1",
      "name": "Import legal subject BSN to session",
      "identityProviderAlias": "digid-machtigen",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "legalSubjectBsn",
        "claim.value": "urn:nl-eid-gdi:1\\.0:LegalSubjectID"
      }
    },
    {
      "id": "43e618b9-3c8b-47d8-a7f9-e79597f034ed",
      "name": "Authentication level",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "sel_level",
        "user.attribute": "authenticationLevel"
      }
    },
    {
      "id": "78a6bc7f-5cfb-4504-80aa-7af5289dc142",
      "name": "Add IDP origin to User session",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "digidMachtigen",
        "syncMode": "INHERIT",
        "attribute": "loginOrigin"
      }
    },
    {
      "id": "30a7d1d8-8491-4b8a-bcbb-503e464ec153",
      "name": "legal-subject-id",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claims": "[]",
        "syncMode": "INHERIT",
        "claim": "urn:nl-eid-gdi:1\\.0:LegalSubjectID",
        "user.attribute": "legalSubjectId"
      }
    },
    {
      "id": "014b1375-8b9d-4e95-9a8d-52566b87e5fe",
      "name": "Authentication level to session",
      "identityProviderAlias": "digid-machtigen",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "sel_level",
        "claim.value": "authenticationLevel"
      }
    },
    {
      "id": "58c4f9c9-ad09-46f1-a3ba-cd7e85af024e",
      "name": "username",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}(${CLAIM.urn:etoegang:1\\.9:attribute:Email})",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "3c85c671-7c1a-4b38-b31a-b254363da6b8",
      "name": "Acting subject BSN to session",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "actingSubjectBsn",
        "claim.value": "urn:nl-eid-gdi:1\\.0:ActingSubjectID"
      }
    },
    {
      "id": "e6e6b3a3-569a-4902-892a-031daff3b78d",
      "name": "Acting subject BSN to session",
      "identityProviderAlias": "digid-machtigen",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "actingSubjectBsn",
        "claim.value": "urn:nl-eid-gdi:1\\.0:ActingSubjectID"
      }
    },
    {
      "id": "6901d5f0-2a52-4908-8887-deeab7c88557",
      "name": "givenname",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "user.attribute": "firstName",
        "attributes": "[]",
        "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"
      }
    },
    {
      "id": "ac656c8f-2f15-4213-9682-9f65d311a303",
      "name": "Import service UUID to session",
      "identityProviderAlias": "eherkenning-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "serviceUUID",
        "claim.value": "urn:etoegang:core:ServiceUUID"
      }
    },
    {
      "id": "5f2cb226-70d7-49ec-ae3c-efab46c16a96",
      "name": "Set IDP origin session attribute",
      "identityProviderAlias": "oidc-digid",
      "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
      "config": {
        "attribute.value": "digid",
        "syncMode": "FORCE",
        "attribute": "loginOrigin"
      }
    },
    {
      "id": "04ef2bb1-3403-409b-98e9-9c309c1f0693",
      "name": "Import authentication level to session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "sel_level",
        "claim.value": "authsp_level"
      }
    },
    {
      "id": "2921996b-b524-46b9-b71d-5f487ed54ad4",
      "name": "Add Service UUID To Session",
      "identityProviderAlias": "digid-machtigen",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "serviceUuid",
        "claim.value": "urn:nl-eid-gdi:1\\.0:ServiceUUID"
      }
    },
    {
      "id": "77d685f8-8a21-4bb1-8802-54c58c0f5021",
      "name": "Import BSN to session",
      "identityProviderAlias": "eherkenning-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "legalSubjectBsn",
        "claim.value": "bsn-betrokkene"
      }
    },
    {
      "id": "9c307082-4371-4cd4-a51a-28173e35455c",
      "name": "kvk",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "urn:etoegang:core:LegalSubjectID",
        "user.attribute": "kvk"
      }
    },
    {
      "id": "02ecfce4-ef86-4d48-b6a7-d01c16b10c5f",
      "name": "Import result code to session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "bwvResultCode",
        "claim.value": "soort"
      }
    },
    {
      "id": "550cfb84-1b6e-48ca-bf98-d722e7d2afcc",
      "name": "Import service UUID to session",
      "identityProviderAlias": "eherkenning-bewindvoering",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "serviceUUID",
        "claim.value": "urn:etoegang:core:ServiceUUID"
      }
    },
    {
      "id": "ebe033e8-7553-4b98-aab7-1be97978665d",
      "name": "Import KVK representation to session",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "attribute": "legalSubjectKvk",
        "claim.value": "kvk"
      }
    },
    {
      "id": "ff65ee03-df5d-4aac-87c8-65445a75606f",
      "name": "Add service UUID to session",
      "identityProviderAlias": "digid-stekkerdoos",
      "identityProviderMapper": "user-session-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "serviceUuid",
        "claim.value": "urn:nl-eid-gdi:1\\.0:ServiceUUID"
      }
    },
    {
      "id": "d8c5a6cc-4e23-4448-b17b-80f3f7371602",
      "name": "username",
      "identityProviderAlias": "oidc-digid",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}(${CLAIM.sub})",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "1be0294b-b6bb-4d12-8432-50074cd7125b",
      "name": "lastName",
      "identityProviderAlias": "oidc-eHerkenning",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claim": "urn:etoegang:1\\.9:attribute:FamilyName",
        "user.attribute": "lastName"
      }
    },
    {
      "id": "cae10f58-d82e-46fc-b186-1fab8061aee7",
      "name": "surname",
      "identityProviderAlias": "saml",
      "identityProviderMapper": "saml-user-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "user.attribute": "lastName",
        "attributes": "[]",
        "attribute.name": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a35081f9-3850-408a-b7b6-7e319223f211",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a855f1a7-06d9-4d9e-be12-6e0e883b1015",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d368fc79-6557-4cc2-af24-d94beff7747d",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "e7ea75f4-76ab-4cd1-a56c-48bdea1c9c3b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "f985379e-81a4-4eb6-bdd9-79c09a4292b5",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "618369b2-3f6a-4141-a397-d07e2fb1c276",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "7238322b-fb38-4dd0-9db6-c2dd20094133",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "335c008a-c6b9-4844-8fa0-d1e727089a75",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "78cb61f3-2285-4260-8cb6-728307acfebf",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "2741474a-dda5-4f07-b2bf-aef1b25ddce8",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "6a09e60c-967e-4012-bbb5-937b145d77e2",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "72342b90-d869-4782-8689-15806e3a0216",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "432b3b6c-3aec-49e2-a566-63a6ccc399fa",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a33fc905-f8e1-476a-b16b-e3ce8248fe5b",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46e1baf8-a02b-4dc1-82b6-97a8a43bd415",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "944fde18-868b-413c-b5fa-dfb65ace41c6",
      "alias": "DigiD - First Login",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-auto-link",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 4,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ce0393fc-86e5-47e7-98b9-c2f9ab54eaa2",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "834db303-0b30-4203-b90c-4f7335b95ad9",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7b232efa-c640-4be9-901e-dcec4c828bd3",
      "alias": "First broker login - eHerkenning First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "27c68bc4-b958-40e6-b830-e51d7b65b8b8",
      "alias": "First broker login - eHerkenning Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - eHerkenning First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "61a84086-c0b5-4dd7-a52e-9b2ea5231e37",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2336bbe5-0fa7-4878-a097-ee89003dbf1a",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "34217919-f098-4fea-8b18-05168c4305bd",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "deea69c6-a9dd-4cb4-8ada-bab102bc621e",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1c42fa06-4aa7-4599-ac9c-90f44b021ad9",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a1fb7996-db97-4bf1-afbf-98752e4ad77f",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e1c729eb-d3b2-4311-94ab-07b5d640054a",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa6556bf-53d3-438b-a996-03ea9e213773",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "428c8681-5680-40b8-9102-0f74217c9e87",
      "alias": "eHerkenning - First Login",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-auto-link",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 4,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "78c2dfff-123b-418f-944a-fa62996a3992",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "28b0aa81-ce42-4fc1-92f4-5045b356fe1c",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8109d9fc-ca07-4a08-b056-00214fff9bcb",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "abed34a5-230f-4b35-9307-41cd1ee2ab8c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "396c94f6-a015-418c-8e63-4f675ca1adf2",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "58f03ccc-9f9d-47a0-be11-905d3e47ea3f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "52002a8e-2487-4c26-a3a2-158186da2904",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d4d61591-5879-4782-a2ae-a3aa5ff37af1",
      "alias": "create unique user config",
      "config": {}
    },
    {
      "id": "5d382555-f8db-40c9-aaea-eba2e67a446d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "319b14c3-1677-4745-8ae8-2b6080b48c08",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    },
    {
      "id": "a439a670-5cc6-44e9-a400-c43cafa90b9d",
      "alias": "test",
      "config": {}
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "17.0.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}