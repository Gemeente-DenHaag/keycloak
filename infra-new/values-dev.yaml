## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy:
- apiVersion: spv.no/v2beta1
  kind: AzureKeyVaultSecret
  metadata:
    name: keycloak-akv2k8s
  spec:
    vault:
      name: kv-zgw-ota-weu-01
      object:
        contentType: 'application/x-yaml'
        name: keycloak-dev
        type: multi-key-value-secret
    output:
      secret:
        name: keycloak
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: '{{ include "common.names.fullname" . }}-ext'
    namespace: '{{ include "common.names.namespace" . }}'
    labels:
      app.kubernetes.io/component: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/instance: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/name: '{{ include "common.names.fullname" . }}'
    annotations:
      kubernetes.io/ingress.class: azure/application-gateway-ext
      appgw.ingress.kubernetes.io/ssl-redirect: 'true'
      appgw.ingress.kubernetes.io/health-probe-path: "/health"
      appgw.ingress.kubernetes.io/waf-policy-for-path: "/subscriptions/e034307d-76cf-46fe-99ce-d1fe427c0b0e/resourceGroups/rg-saks-o-weu-02/providers/Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/wafpol-zgw-saks-o-weu-01"
      meta.helm.sh/release-name: '{{ include "common.names.fullname" . }}'
      meta.helm.sh/release-namespace: '{{ include "common.names.namespace" . }}'
  spec:
    tls:
    - hosts:
      - '{{ .Values.ingress.hostname }}'
      secretName: sterdevdenhaagnl-tls
    rules:
      - host: '{{ .Values.ingress.hostname }}'
        http:
          paths:
            - path: /
              pathType: ImplementationSpecific
              backend:
                service:
                  name: '{{ include "common.names.fullname" . }}'
                  port:
                    name: http
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/instance: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/name: '{{ include "common.names.fullname" . }}'
    name: '{{ include "common.names.fullname" . }}-cache-ispn-xml'
    namespace: '{{ include "common.names.namespace" . }}'
  data:
    cache-ispn.xml: |
      <?xml version="1.0" encoding="UTF-8"?>
      <!--
      ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
      ~ and other contributors as indicated by the @author tags.
      ~
      ~ Licensed under the Apache License, Version 2.0 (the "License");
      ~ you may not use this file except in compliance with the License.
      ~ You may obtain a copy of the License at
      ~
      ~ http://www.apache.org/licenses/LICENSE-2.0
      ~
      ~ Unless required by applicable law or agreed to in writing, software
      ~ distributed under the License is distributed on an "AS IS" BASIS,
      ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      ~ See the License for the specific language governing permissions and
      ~ limitations under the License.
      -->

      <infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="urn:infinispan:config:14.0 http://www.infinispan.org/schemas/infinispan-config-14.0.xsd"
                  xmlns="urn:infinispan:config:14.0">
        <cache-container name="keycloak">
          <transport lock-timeout="60000"/>
          <local-cache name="realms"
                      simple-cache="true">
            <encoding>
              <key media-type="application/x-java-object"/>
              <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
          </local-cache>
          <local-cache name="users"
                      simple-cache="true">
            <encoding>
              <key media-type="application/x-java-object"/>
              <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
          </local-cache>
          <distributed-cache name="sessions"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <distributed-cache name="authenticationSessions"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <distributed-cache name="offlineSessions"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <distributed-cache name="clientSessions"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <distributed-cache name="offlineClientSessions"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <distributed-cache name="loginFailures"
                            owners="2">
            <expiration lifespan="-1"/>
          </distributed-cache>
          <local-cache name="authorization"
                      simple-cache="true">
            <encoding>
              <key media-type="application/x-java-object"/>
              <value media-type="application/x-java-object"/>
            </encoding>
            <memory max-count="10000"/>
          </local-cache>
          <replicated-cache name="work">
            <expiration lifespan="-1"/>
          </replicated-cache>
          <local-cache name="keys"
                      simple-cache="true">
            <encoding>
              <key media-type="application/x-java-object"/>
              <value media-type="application/x-java-object"/>
            </encoding>
            <expiration max-idle="3600000"/>
            <memory max-count="1000"/>
          </local-cache>
          <distributed-cache name="actionTokens"
                            owners="2">
            <encoding>
              <key media-type="application/x-java-object"/>
              <value media-type="application/x-java-object"/>
            </encoding>
            <expiration max-idle="-1"
                        lifespan="-1"
                        interval="300000"/>
            <memory max-count="-1"/>
          </distributed-cache>
        </cache-container>
      </infinispan>
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/component: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/instance: '{{ include "common.names.fullname" . }}'
      app.kubernetes.io/name: '{{ include "common.names.fullname" . }}'
    name: '{{ include "common.names.fullname" . }}-keycloak-conf'
    namespace: '{{ include "common.names.namespace" . }}'
  data:
    keycloak.conf: |
      # Basic settings for running in production. Change accordingly before deploying the server.

      # Database

      # The database vendor.
      #db=postgres

      # The username of the database user.
      #db-username=keycloak

      # The password of the database user.
      #db-password=password

      # The full database JDBC URL. If not provided, a default URL is set based on the selected database vendor.
      #db-url=jdbc:postgresql://localhost/keycloak

      # Observability

      # If the server should expose healthcheck endpoints.
      #health-enabled=true

      # If the server should expose metrics endpoints.
      #metrics-enabled=true

      # HTTP

      # The file path to a server certificate or certificate chain in PEM format.
      #https-certificate-file=${kc.home.dir}conf/server.crt.pem

      # The file path to a private key in PEM format.
      #https-certificate-key-file=${kc.home.dir}conf/server.key.pem

      # The proxy address forwarding mode if the server is behind a reverse proxy.
      #proxy=reencrypt

      # Do not attach route to cookies and rely on the session affinity capabilities from reverse proxy
      #spi-sticky-session-encoder-infinispan-should-attach-route=false

      # Hostname for the Keycloak server.
      #hostname=myhostname


## @section Keycloak parameters
tolerations:
- key: "zgwo01"
  operator: "Equal"
  value: "true"
  effect: "NoSchedule"
## @param extraEnvVars Extra environment variables to be set on Keycloak container
## Example:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars:
- name: KC_FEATURES
  value: token-exchange,admin-fine-grained-authz
- name: KC_HOSTNAME
  value: '{{ .Values.ingress.hostname }}'
- name: KC_LOG_LEVEL
  value: INFO,org.keycloak.services:INFO,org.keycloak.authentication:INFO,org.apache.http.wire:DEBUG,org.keycloak.broker:DEBUG
- name: KEYCLOAK_ENABLE_HEALTH_ENDPOINTS
  value: 'true'
# to fix logout for klantportaal:
- name: KC_SPI_LOGIN_PROTOCOL_OPENID_CONNECT_LEGACY_LOGOUT_REDIRECT_URI
  value: 'true'
- name: KEYCLOAK_MOUNTED_CONF_DIR
  value: 

## @param replicaCount Number of Keycloak replicas to deploy
##
replicaCount: 1

## Keycloak ingress parameters
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.hostname Default host for the ingress record (evaluated as template)
  ##
  hostname: keycloak-zgw.dev.denhaag.nl
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway-int
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/waf-policy-for-path: "/subscriptions/e034307d-76cf-46fe-99ce-d1fe427c0b0e/resourceGroups/rg-saks-o-weu-02/providers/Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/wafpol-zgw-saks-o-weu-01"
  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## extraTls:
  ## - hosts:
  ##     - keycloak.local
  ##   secretName: keycloak.local-tls
  ##
  extraTls:
  - hosts:
    - keycloak-zgw.dev.denhaag.nl
    secretName: sterdevdenhaagnl-tls

## @section Other parameters
##

## Keycloak Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  ## @param pdb.create Enable/disable a Pod Disruption Budget creation
  ##
  create: false
  ## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ##
  minAvailable: 1
  ## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  maxUnavailable: ""
## Keycloak Autoscaling configuration
## @param autoscaling.enabled Enable autoscaling for Keycloak
## @param autoscaling.minReplicas Minimum number of Keycloak replicas
## @param autoscaling.maxReplicas Maximum number of Keycloak replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPU: ""
  targetMemory: ""

## @section Database parameters

## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalDatabase.host Database host
## @param externalDatabase.port Database port number
## @param externalDatabase.user Non-root username for Keycloak
## @param externalDatabase.password Password for the non-root username for Keycloak
## @param externalDatabase.database Keycloak database name
## @param externalDatabase.existingSecret Name of an existing secret resource containing the database credentials
## @param externalDatabase.existingSecretHostKey Name of an existing secret key containing the database host name
## @param externalDatabase.existingSecretPortKey Name of an existing secret key containing the database port
## @param externalDatabase.existingSecretUserKey Name of an existing secret key containing the database user
## @param externalDatabase.existingSecretDatabaseKey Name of an existing secret key containing the database name
## @param externalDatabase.existingSecretPasswordKey Name of an existing secret key containing the database credentials
## @param externalDatabase.annotations Additional custom annotations for external database secret object
##
externalDatabase:
  host: ""
  port: 
  user: 
  database: 
  password: ""
  existingSecret: "keycloak"
  existingSecretHostKey: "KEYCLOAK_DATABASE_HOST"
  existingSecretPortKey: "KEYCLOAK_DATABASE_PORT"
  existingSecretUserKey: "KEYCLOAK_DATABASE_USER"
  existingSecretDatabaseKey: "KEYCLOAK_DATABASE_NAME"
  existingSecretPasswordKey: "KEYCLOAK_DATABASE_PASSWORD"
  annotations: {}